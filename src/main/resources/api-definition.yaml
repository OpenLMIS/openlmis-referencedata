#%RAML 0.8
---
title: OpenLMIS Reference Data API
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS referencedata service documentation.

schemas:
  - booleanResult: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "BooleanResult",
          "description": "Boolean result",
          "properties": {
              "result": { "type": "boolean", "required": true, "title": "result" }
          }
      }

  - integerResult: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "IntegerResult",
          "description": "Integer result",
          "properties": {
              "result": { "type": "number", "required": true, "title": "result" }
          }
      }

  - errorResponse: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "ErrorResponse",
          "description": "Error response",
          "properties": {
              "message": { "type": "string", "required": true, "title": "message" },
              "description": { "type": "string", "required": false, "title": "description" }
          }
      }

  - localizedErrorResponse: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "LocalizedErrorResponse",
          "description": "Localized Error response",
          "properties": {
              "messageKey": { "type": "string", "title": "message key" },
              "message": { "type": "string", "title": "message" }
          },
          "required": ["messageKey"]
      }

  - approvedProductDto: !include schemas/approvedProductDto.json

  - approvedProductDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/approvedProductDto.json" }
      }

  - approvedProductQueryDto: !include schemas/approvedProductQueryDto.json

  - basicFacilityDto: !include schemas/basicFacilityDto.json

  - minimalFacilityDto: !include schemas/minimalFacilityDto.json

  - minimalFacilityArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref":"schemas/minimalFacilityDto.json" }
        }

  - namedResourceArray: |
      {
         "type": "array",
         "items": { "type": "object", "$ref": "schemas/namedResource.json" }
      }

  - facility: !include schemas/facility.json

  - facilityArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref":"schemas/facility.json" }
      }
  
  - facilityPage: !include schemas/facilityPage.json

  - basicFacilityPage: !include schemas/facilityPage.json

  - facilityQueryDto: !include schemas/facilityQueryDto.json

  - facilityOperator: !include schemas/facilityOperator.json

  - facilityType: !include schemas/facilityType.json

  - geographicLevel: !include schemas/geographicLevel.json

  - geographicZone: !include schemas/geographicZone.json

  - geographicZoneArray: |
      {
         "type": "array",
         "items": { "type": "object", "$ref": "schemas/geographicZone.json" }
      }

  - geographicZonePage: !include schemas/geographicZonePage.json

  - geographicZoneQuery: !include schemas/geographicZoneQueryDto.json

  - commodityType:  !include schemas/commodityType.json

  - commodityTypePage: !include schemas/commodityTypePage.json

  - tradeItem:  !include schemas/tradeItem.json

  - tradeItemPage: !include schemas/tradeItemPage.json

  - orderable: !include schemas/orderable.json

  - orderablePage: !include schemas/orderablePage.json

  - orderableQueryDto: !include schemas/orderableQueryDto.json

  - processingPeriod: !include schemas/processingPeriod.json

  - processingPeriodArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/processingPeriod.json" }
      }

  - orderableDisplayCategory: !include schemas/orderableDisplayCategory.json

  - orderableDisplayCategoryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/orderableDisplayCategory.json" }
      }

  - program: !include schemas/program.json

  - programArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/program.json" }
      }

  - programOrderable: !include schemas/programOrderable.json

  - right: !include schemas/right.json

  - rightArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/right.json" }
      }

  - role: !include schemas/role.json

  - roleArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/role.json" }
      }

  - processingSchedule: !include schemas/processingSchedule.json

  - processingScheduleArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/processingSchedule.json" }
      }

  - user: !include schemas/user.json

  - userArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/user.json" }
      }

  - userPage: !include schemas/userPage.json

  - userQueryDto: !include schemas/userQueryDto.json

  - detailedRoleAssignmentDto: !include schemas/detailedRoleAssignmentDto.json

  - detailedRoleAssignmentDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/detailedRoleAssignmentDto.json" }
      }

  - supervisoryNodeDto: !include schemas/supervisoryNodeDto.json

  - supervisoryNodeDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/supervisoryNodeDto.json" }
      }

  - supervisoryNodePage: !include schemas/supervisoryNodePage.json

  - supervisoryNodeQueryDto: !include schemas/supervisoryNodeQueryDto.json

  - supplyLine: !include schemas/supplyLineDto.json

  - supplyLineQuery: !include schemas/supplyLineQuery.json

  - supplyLinePage: !include schemas/supplyLinePage.json

  - requisitionGroup: !include schemas/requisitionGroupDto.json

  - requisitionGroupProgramSchedule: !include schemas/requisitionGroupProgramScheduleDto.json

  - requisitionGroupQuery: !include schemas/requisitionGroupQueryDto.json

  - requisitionGroupPage: !include schemas/requisitionGroupPageDto.json

  - stockAdjustmentReason: !include schemas/stockAdjustmentReason.json

  - stockAdjustmentReasonArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/stockAdjustmentReason.json" }
      }

  - uuidArray: |
      {
          "type": "array",
          "items": { "type": "string", "title": "id" }
      }

  - auditLogEntry: !include schemas/auditLogEntry.json

  - auditLogEntryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/auditLogEntry.json" }
      }

  - currencySettingsDto: !include schemas/currencySettingsDto.json

  - lot: !include schemas/lot.json

  - lotDto: !include schemas/lotDto.json

  - lotArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/lotDto.json" }
      }
  
  - geoJsonPoint: !include schemas/geoJsonPoint.json
  
  - geoJsonPolygon: !include schemas/geoJsonPolygon.json

  - stringArray: |
      {
          "type": "array",
          "items": { "type": "string", "title": "string" }
      }

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: false
                  repeat: false
          headers:
              Authorization:
                  displayName: Authorization
                  description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
                  type: string
                  required: false
                  repeat: false

    - paginated:
          queryParameters:
              page:
                  description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined valued are interpreted as zero.
                  type: integer
                  required: false
                  repeat: false
              size:
                  description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
                  type: integer
                  required: false
                  repeat: false
    - sorted:
          queryParameters:
              sort:
                  description: Sorting criteria in the format "property(,asc|desc)". Default sort order is ascending. Multiple sort criteria are supported.
                  type: string
                  required: false
                  repeat: true

resourceTypes:
    - auditLog:
        description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
        get:
          description: Returns all or part of the resource's audit log
          # Although */auditLog endpoints support "page" and "number" query parameters for pagination,
          # they donâ€™t return the response body and set of pagination-related values used by collections
          # of core domain resources.
          is: [ secured, paginated ]
          queryParameters:
              author:
                  displayName: author
                  description: UUID of the author of changes which should be returned. By default, all changes are returned regardless of author.
                  type: string
                  required: false
                  repeat: false
              changedPropertyName:
                  displayName: changedPropertyName
                  description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
                  type: string
                  required: false
                  repeat: false
          responses:
              200:
                body:
                  application/json:
                    schema: auditLogEntryArray
                    example: |
                      [
                        {
                          "changeType": "ValueChange",
                          "globalId": {
                            "entity": "org.openlmis.SomeClass",
                            "cdoId": 1
                          },
                          "commitMetadata": {
                            "author": "SomeUserName",
                            "properties": [],
                            "commitDate": "2016-12-17T19:39:57.621",
                            "id": 3
                          },
                          "property": "PropertyName",
                          "left": "OldValue",
                          "right": "NewValue"
                        }
                      ]
              403:
                body:
                  application/json:
                    schema: localizedErrorResponse
              404:
                description: The specified <<resourcePathName|!singularize>> does not exist.
                body:
                  application/json:
                    schema: localizedErrorResponse

    - instanceAuditLog:
        description: This represents the audit log for a specified instance of the <<resourcePathName|!singularize>> resource.
        type: auditLog
        uriParameters:
            id:
                type: string
                required: true
                repeat: false

    - collection:
        get:
            is: [ secured ]
            responses:
                200:
                  description: Collection retrieved successfully
                  body:
                      application/json:
                          schema: <<schema>>
                404:
                  description: Collection is empty.
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                201:
                  description: Item created successfully
                  body:
                      application/json:
                          schema: <<schema>>
    - member:
        get:
            is: [ secured ]
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        delete:
            is: [ secured ]
            responses:
                200:

/api:
  /processingPeriods:
      displayName: Processing Period
      get:
          is: [ secured ]
          description: Get all periods.
          queryParameters:
              sort:
                  displayName: sort
                  type: string
                  required: false
                  repeat: false
          responses:
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "200":
                  body:
                    application/json:
                      schema: processingPeriodArray
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "404":
      post:
          is: [ secured ]
          description: Creates given processingPeriod if possible.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes processing period. This action is not recoverable."
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen processingPeriod.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: processingPeriod
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing processingPeriod.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                          schema: processingPeriod
                  "400":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/duration:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Display total months of processingPeriod.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: integerResult
                  "400":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "500":
                      body:
                        application/json:
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          get:
              is: [ secured ]
              description: Find periods with matched parameters.
              queryParameters:
                  programId:
                          displayName: program
                          type: string
                          required: true
                          repeat: false
                  facilityId:
                          displayName: facility
                          type: string
                          required: true
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: processingPeriodArray
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
      /searchByScheduleAndDate:
          get:
              is: [ secured ]
              description: Find periods with matched parameters.
              queryParameters:
                  processingScheduleId:
                          displayName: processingSchedule
                          type: string
                          required: true
                          repeat: false
                  startDate:
                          displayName: startDate
                          type: string
                          required: false
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: processingPeriodArray
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:

  /orderableDisplayCategories:
      displayName: Product Categories
      post:
            is: [ secured ]
            description: Create new orderableDisplayCategory.
            body:
                application/json:
                    schema: orderableDisplayCategory
            responses:
                "201":
                    body:
                        application/json:
                            schema: orderableDisplayCategory
                "400":
                    body:
                        application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all orderableDisplayCategories.
            responses:
                "200":
                    body:
                        application/json:
                            schema: orderableDisplayCategoryArray
                "404":
                    body:
                       application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing orderableDisplayCategory.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                                schema: orderableDisplayCategory
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen orderableDisplayCategory.
                responses:
                    "200":
                        body:
                            application/json:
                                schema: orderableDisplayCategory
                    "404":
                        body:
                            application/json:
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes display category. This action is not recoverable."
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          get:
              is: [ secured ]
              description: Find orderable categories with matched code.
              queryParameters:
                  code:
                      displayName: code
                      description: orderableDisplayCategory code.
                      type: string
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: orderableDisplayCategoryArray
                  "404":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /orderables:
      displayName: Orderable Product
      put:
          is: [ secured ]
          description: Create an Orderable.
          body:
            application/json:
              schema: orderable
          responses:
              "200":
                  body:
                    application/json:
                        schema: orderable
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      get:
          is: [ secured, paginated ]
          description: Get all Orderable Products.
          responses:
              "200":
                  body:
                    application/json:
                        schema: orderablePage
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get chosen orderable orderable.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: orderable
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          post:
              is: [ secured, paginated ]
              description: Returns a paginated list of orderables given either a Program Code, a Name or a Code.
              body:
                application/json:
                  schema: orderableQueryDto
              responses:
                200:
                    body:
                      application/json:
                          schema: orderablePage
                400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse

  /tradeItems:
      displayName: Trade Item
      put:
          is: [ secured ]
          description: Create or update a Trade Item.
          body:
            application/json:
              schema: tradeItem
          responses:
              "200":
                  body:
                    application/json:
                        schema: tradeItem
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      get:
          is: [ secured, paginated ]
          description: Retrieve trade items. Optionally filter by the classification ID, either by full or partial match.
          queryParameters:
              classificationId:
                      displayName: classificaitonID
                      type: string
                      required: false
                      repeat: false
              fullMatch:
                      displayName: fullMatch
                      type: boolean
                      required: false
                      repeat: false
          responses:
              "200":
                  body:
                    application/json:
                      schema: tradeItemPage
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /commodityTypes:
      displayName: Commodity Type
      put:
          is: [ secured ]
          description: Create or update a Commodity Type.
          body:
            application/json:
                schema: commodityType
          responses:
              "200":
                  body:
                    application/json:
                        schema: commodityType
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      get:
          is: [ secured, paginated ]
          description: Retrieve commodity types.
          responses:
              "200":
                  body:
                    application/json:
                      schema: commodityTypePage
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse

      /{id}/tradeItems:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get a list of Trade Item UUIDs that may fulfill for the given Commodity Type.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: uuidArray
                  "404":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update the list of Trade Item UUIDs that may fulfill for the given Commodity Type.
              body:
                  application/json:
                      schema: uuidArray
              responses:
                  "200":
                  "400":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /processingSchedules:
      displayName: Processing Schedule
      get:
          is: [ secured ]
          description: Get all schedules.
          responses:
              "200":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "404":
      post:
          is: [ secured ]
          description: Creates new processingSchedule.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse

      /search:
          get:
              is: [ secured ]
              description: Retrieve Processing Schedule based on the provided parameters.
              queryParameters:
                  programId:
                          displayName: program
                          type: string
                          required: true
                          repeat: false
                  facilityId:
                          displayName: facility
                          type: string
                          required: true
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                            schema: processingScheduleArray
                  "400":
                      body:
                        application/json:
                            schema: errorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse

      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes processing schedule. This action is not recoverable."
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen processingSchedule.
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing processingSchedule.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "400":
      /{id}/auditLog:
          type: instanceAuditLog

  /supplyLines:
      displayName: Supply Lines
      get:
          is: [ secured ]
          description: Get all supplyLines.
          responses:
              "200":
                  body:
                    application/json:
              "404":
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new supplyLine.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes supply line. This action is not recoverable."
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen supplyLine.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing supplyLine.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          post:
              is: [ secured, paginated, sorted ]
              description: Filter Supply Lines by program, supervisory node and supplying facility. All properties are codes.
              body:
                  application/json:
                      schema: supplyLineQuery
              responses:
                  "200":
                      body:
                          application/json:
                              schema: supplyLinePage
                  "400":
                      body:
                          application/json:
                              schema: localizedErrorResponse
                  "403":
                      body:
                          application/json:
                              schema: localizedErrorResponse
      /searchByUUID:
          get:
              is: [ secured ]
              description: Find Supply Lines with matched parameters.
              queryParameters:
                  programId:
                      displayName: programId
                      description: program ID
                      type: string
                      required: true
                      repeat: false
                  supervisoryNodeId:
                      displayName: supervisoryNodeId
                      description: supervisoryNode ID
                      type: string
                      required: false
                      repeat: false
                  supplyingFacilityId:
                      displayName: supplyingFacilityId
                      description: supplyingFacility ID
                      type: string
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                  "500":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /users:
      displayName: User
      get:
          is: [ secured ]
          description: Retrieve all users in the system.
          responses:
              "200":
                  body:
                    application/json:
                      schema: userArray
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      put:
          is: [ secured ]
          description: Create a new user or update an exising one. The value of the ID field in the body is used to determine whether this is a new or existing user.
          body:
              application/json:
                schema: user
          responses:
              "200":
                  body:
                    application/json:
                      schema: user
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{userId}:
          uriParameters:
              userId:
                  displayName: User ID
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes user. This action is not recoverable."
              responses:
                  "204":
                  "400":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get a chosen user by providing his ID.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: user
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          /roleAssignments:
              get:
                  is: [ secured ]
                  description: Return full information about user's roles and rights.
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: detailedRoleAssignmentDtoArray
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /hasRight:
              get:
                  is: [ secured ]
                  description: Check if the user has a right with certain criteria.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                      programId:
                          displayName: Program ID
                          description: The program to check (for supervision rights).
                          type: string
                          required: false
                          repeat: false
                      facilityId:
                          displayName: Facility ID
                          description: The facility to check (for supervision rights). If program is specified, this is required.
                          type: string
                          required: false
                          repeat: false
                      warehouseId:
                          displayName: Warehouse ID
                          description: The warehouse to check (for fulfillment rights).
                          type: string
                          required: false
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: booleanResult
                      "400":
                          body:
                            application/json:
                              schema: errorResponse
                      "404":
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /programs:
              is: [ secured ]
              displayName: User supervised programs
              get:
                  is: [ secured ]
                  description: Get all programs the associated user supervises (through the home
                      facility or through supervisory nodes).
                  queryParameters:
                      forHomeFacility:
                          displayName: For Home Facility
                          description: Flag to get programs for home facility.
                          type: boolean
                          required: false
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: programArray
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /supportedPrograms:
              is: [ secured ]
              displayName: User supported programs
              get:
                  is: [ secured ]
                  description: Get all supported programs the associated user supervises through the home
                      facility.
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: programArray
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /supervisedFacilities:
              is: [ secured ]
              displayName: User supervised facilities
              get:
                  is: [ secured ]
                  description: WARNING! deprecated; please use /facilities to get a user's facilities. To determine which facilities work with which right and program, please use /permissionStrings for mappings. Get all facilities the associated user supervises, by right and program.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                      programId:
                          displayName: Program ID
                          description: The program to check.
                          type: string
                          required: true
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: facilityArray
                      "400":
                          body:
                            application/json:
                              schema: errorResponse
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /fulfillmentFacilities:
              is: [ secured ]
              displayName: User fulfilled facilities
              get:
                  is: [ secured ]
                  description: Get all facilities the associated user can fulfill.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: facilityArray
                      "400":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "404":
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /permissionStrings:
              is: [ secured ]
              displayName: User permission strings
              get:
                  is: [ secured ]
                  description: Gets all permissions (in string format) associated with a user. The format is as follows; RightName|FacilityUUID|ProgramUUID for supervision rights, RightName|FacilityUUID for fulfillment rights, and RightName for general rights.
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: stringArray
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /facilities:
              is: [ secured ]
              displayName: User facilities
              get:
                  is: [ secured ]
                  description: Gets all supervision facilities associated with a user. To determine which facilities work with which right and program, please use /permissionStrings for mappings.
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: namedResourceArray
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

      /search:
              post:
                  is: [ secured, paginated ]
                  description: "Search users, matching all parameters specified. Search
                  parameters are passed in the request body, in JSON format. The JSON in the
                  request body should be one or more key-value pairs. Returns paginated user list
                   sorted in descending alphabetical order. For firstName, lastName, email: matches
                   values that equal or
                   contain the searched value. Case insensitive. Other fields: entered string value must equal searched value."
                  body:
                      application/json:
                        schema: userQueryDto
                  responses:
                      "200":
                          body:
                            application/json:
                                schema: userPage
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
      /rightSearch:
              get:
                  is: [ secured ]
                  description: "Search users that have the given right assigned. This searches for users with role assignments matching all the parameters based on their type. Takes additional parameters for fulfillment and supervision rights."
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to search for.
                          type: string
                          required: true
                          repeat: false
                      programId:
                          displayName: Program ID
                          description: The program to search for - required only for supervision rights.
                          type: string
                          required: false
                          repeat: false
                      supervisoryNodeId:
                          displayName: Supervisory Node ID
                          description: The supervisory node to search for - required only for supervision rights.
                          type: string
                          required: false
                          repeat: false
                      warehouseId:
                          displayName: Warehouse ID
                          description: The warehouse to search for - required only for fulfillment rights.
                          type: string
                          required: false
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                                schema: userArray
                      "400":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse

  /facilities:
      displayName: Facility
      get:
          is: [ secured ]
          description: Get all facilities.
          responses:
              "200":
                  body:
                    application/json:
                      schema: facilityArray
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new facility.
          body:
              application/json:
                schema: facility
          responses:
              "201":
                  body:
                    application/json:
                      schema: facility
              "400":
                  body:
                    application/json:
                      schema: errorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes facility. This action is not recoverable."
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen facility.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: facility
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing facility.
              body:
                  application/json:
                    schema: facility
              responses:
                  "200":
                      body:
                        application/json:
                          schema: facility
                  "400":
                      body:
                        application/json:
                          schema: errorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

      /{id}/approvedProducts:
          uriParameters:
              id:
                  displayName: Facility ID
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Returns a list of full or non-full supply approved products for this facility
              queryParameters:
                  programId:
                      displayName: Program ID
                      type: string
                      required: false
                      repeat: false
                  fullSupply:
                      displayName: Full-supply orderable
                      type: boolean
                      required: true
                      repeat: false
              responses:
                200:
                    body:
                      application/json:
                        schema: approvedProductDtoArray
                400:
                    body:
                      application/json:
                        schema: errorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /supplying:
          get:
              is: [ secured ]
              description: Returns a list of facilities.
              queryParameters:
                  programId:
                      displayName: programId
                      type: string
                      required: true
                      repeat: false
                  supervisoryNodeId:
                      displayName: supervisoryNodeId
                      type: string
                      required: true
                      repeat: false
              responses:
                200:
                    body:
                      application/json:
                400:
                    body:
                      application/json:
                        schema: errorResponse
                404:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                500:

      /search:
          post:
              is: [ secured, paginated ]
              description: Returns a paginated list of facilities given either a Zone, a Name, a Facility Type or a Code. The recurse option should be given when a zone is also given, and it means that the search should also include all children of the given zone.
              body:
                application/json:
                  schema: facilityQueryDto
              responses:
                200:
                    body:
                      application/json:
                          schema: basicFacilityPage
                400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                404:
      /minimal:
          get:
              is: [ secured ]
              description: Returns all facilities with id and name fields.
              responses:
                  200:
                      body:
                        application/json:
                            schema: minimalFacilityArray
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /byBoundary:
          post:
              is: [ secured, paginated ]
              description: Returns a paginated list of facilities given a polygon in the GeoJSON format.
              body:
                application/json:
                  schema: geoJsonPolygon
              responses:
                200:
                    body:
                      application/json:
                          schema: facilityPage
                400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse

  /facilityTypes:
      displayName: Facility Type
      get:
          is: [ secured ]
          description: Get all facilityTypes.
          responses:
              "200":
                  body:
                    application/json:
              "404":
              403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new facilityType.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes facility type. This action is not recoverable."
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen facilityType.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing facilityType.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /programs:
      displayName: Program
      get:
          is: [ secured ]
          description: Get all programs.
          responses:
              "200":
                  body:
                    application/json:
              "404":
      post:
          is: [ secured ]
          description: Creates new program.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "400":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes program. This action is not recoverable."
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen program.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing program.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "400":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /search:
          get:
              is: [ secured ]
              description: Get chosen program.
              queryParameters:
                  name:
                      displayName: name
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
      /{id}/auditLog:
          type: instanceAuditLog

  /stockAdjustmentReasons:
      displayName: Stock Adjustment Reason
      get:
          is: [ secured ]
          description: WARNING! deprecated; please use /stockCardLineItemReasons (for all reasons) or /validReasons (for reasons by program and facility type) to get a list of reasons. Get all stockAdjustmentReasons.
          responses:
              "200":
                  body:
                    application/json:
                      schema: stockAdjustmentReasonArray
              "404":
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: WARNING! deprecated; please use /stockCardLineItemReasons to create a reason or /validReasons to map reasons by program and facility type. Creates new Stock Adjustment Reason.
          body:
              application/json:
                  schema: stockAdjustmentReason
          responses:
              "201":
                  body:
                    application/json:
                      schema: stockAdjustmentReason
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "WARNING! deprecated. [AVOID USING] Completely removes stock adjustment reason. This action is not recoverable."
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: WARNING! deprecated; please use /stockCardLineItemReasons (for all reasons) or /validReasons (for reasons by program and facility type) to get a list of reasons. Get chosen Stock Adjustment Reason.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReason
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: "WARNING! deprecated; please use /stockCardLineItemReasons/{id} to update a reason or /validReasons to map reasons by program and facility type. Update existing Stock Adjustment Reason."
              body:
                  application/json:
                      schema: stockAdjustmentReason
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReason
                  "400":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /search:
          get:
              is: [ secured ]
              description: WARNING! deprecated; please use /stockCardLineItemReasons (for all reasons) or /validReasons (for reasons by program and facility type) to get a list of reasons. Search for Stock Adjustment Reasons.
              queryParameters:
                  program:
                      displayName: programId
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReasonArray
                  "404":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /facilityOperators:
      displayName: Facility Operators
      post:
            is: [ secured ]
            description: Add Facility Operator to database.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "500":
                    body:
                        application/json:
      get:
            is: [ secured ]
            description: Returns Facility Operators with given id from database.
            responses:
                "200":
                    body:
                        application/json:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "404":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Updates Facility Operators with given id from database.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Updates Facility Operators with given id from database.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes facility operator. This action is  not recoverable."
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /geographicZones:
      displayName: Geographic Zone
      get:
          is: [ secured, paginated ]
          description: Get all geographicZones.
          responses:
              "200":
                  body:
                    application/json:
                      schema: geographicZonePage
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new geographicZone.
          body:
              application/json:
                schema: geographicZone
          responses:
              "201":
                  body:
                    application/json:
                      schema: geographicZone
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes geographic zone. This action is not recoverable."
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen geographicZone.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: geographicZone
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing geographicZone.
              body:
                  application/json:
                    schema: geographicZone
              responses:
                  "200":
                      body:
                        application/json:
                          schema: geographicZone
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          post:
              is: [ secured, paginated, sorted ]
              description: Filter geographic zones by parent, level, name and code. Results are ordered ascending by name.
              body:
                application/json:
                  schema: geographicZoneQuery
              responses:
                  "200":
                      body:
                        application/json:
                          schema: geographicZonePage
                  "400":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /byLocation:
          post:
              is: [ secured, paginated ]
              description: Returns a list of geographic zones given a point in the GeoJSON format.
              body:
                application/json:
                  schema: geoJsonPoint
              responses:
                200:
                    body:
                      application/json:
                          schema: geographicZoneArray
                400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse

  /geographicLevels:
      displayName: Geographic Level
      get:
          is: [ secured ]
          description: Get all geographicLevels.
          responses:
              "200":
                  body:
                    application/json:
              "404":
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new geographicLevel.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: "[AVOID USING] Completely removes geographic level. This action is not recoverable."
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen geographicLevel.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing geographicLevel.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /facilityTypeApprovedProducts:
      displayName: Facility Type Approved Product
      post:
            is: [ secured ]
            description: Create new facilityTypeApprovedProduct.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "400":
                    body:
                        application/json:
                          schema: localizedErrorResponse
                "403":
                    body:
                        application/json:
                          schema: localizedErrorResponse
                "500":
                    body:
                        application/json:

      /search:
          post:
              is: [ secured ]
              description: Returns a list of approved products by search criteria
              body:
                application/json:
                  schema: approvedProductQueryDto
              responses:
                200:
                    body:
                      application/json:
                          schema: approvedProductDtoArray
                400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse

      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing facilityTypeApprovedProduct.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:

                    "400":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen facilityTypeApprovedProduct.
                responses:
                    "200":
                        body:
                            application/json:
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes facility type approved product. This action is not recoverable."
                responses:
                    "204":
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
      /{id}/auditLog:
          type: instanceAuditLog

  /supervisoryNodes:
      displayName: Supervisory Node
      post:
            is: [ secured ]
            description: Create new supervisoryNode.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "500":
                    body:
                        application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all supervisoryNodes.
            responses:
                "200":
                    body:
                        application/json:
                "404":
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse

      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing supervisoryNode.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen supervisoryNode.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes supervisory node. This action is not recoverable."
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            /supervisingUsers:
                  get:
                      is: [ secured ]
                      description: Get supervising users based on the provided parameters.
                      queryParameters:
                          rightId:
                                  displayName: Right ID
                                  type: string
                                  required: true
                                  repeat: false
                          programId:
                                  displayName: Program ID
                                  type: string
                                  required: true
                                  repeat: false
                      responses:
                          "200":
                              body:
                                application/json:
                                    schema: userArray
                          "400":
                              body:
                                application/json:
                                  schema: localizedErrorResponse
                          "403":
                              body:
                                application/json:
                                  schema: localizedErrorResponse
                          "404":
                              body:
                                application/json:
                                  schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
            post:
                is: [ secured, paginated ]
                description: Retrieve Supervisory Node Page based on the provided parameters.
                body:
                    application/json:
                        schema: supervisoryNodeQueryDto
                responses:
                    "200":
                        body:
                          application/json:
                              schema: supervisoryNodePage
                    "400":
                        body:
                          application/json:
                            schema: errorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
  /roles:
      displayName: Role
      post:
            is: [ secured ]
            description: Create new role.
            body:
                application/json:
                  schema: role
            responses:
                "201":
                    body:
                        application/json:
                          schema: role
                "400":
                    body:
                        application/json:
                "403":
                    body:
                        application/json:
                          schema: localizedErrorResponse
                "409":
                    body:
                        application/json:
                          schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all roles.
            responses:
                "200":
                    body:
                        application/json:
                          schema: roleArray
                "403":
                    body:
                        application/json:
                          schema: localizedErrorResponse
      /{roleId}:
            uriParameters:
              roleId:
                  displayName: Role ID
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing role (or create new one using role ID).
                body:
                    application/json:
                      schema: role
                responses:
                    "200":
                        body:
                            application/json:
                              schema: role
                    "400":
                        body:
                            application/json:
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen role.
                responses:
                    "200":
                        body:
                            application/json:
                              schema: role
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes role. This action is not recoverable."
                responses:
                    "204":
                    "400":
                        body:
                            application/json:
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

  /rights:
      displayName: Right
      put:
            is: [ secured ]
            description: Save a right.
            body:
                application/json:
                    schema: right
            responses:
                "200":
                    body:
                        application/json:
                            schema: right
                "400":
                    body:
                        application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all rights.
            responses:
                "200":
                    body:
                        application/json:
                            schema: rightArray
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{rightId}:
            uriParameters:
              rightId:
                  displayName: Right ID
                  type: string
                  required: true
                  repeat: false
            get:
                is: [ secured ]
                description: Get chosen right.
                responses:
                    "200":
                        body:
                            application/json:
                                schema: right
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes right. This action is not recoverable."
                responses:
                    "204":
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          get:
              is: [ secured ]
              description: Search for rights.
              queryParameters:
                  name:
                      displayName: Name of the right to find
                      type: string
                      required: false
                      repeat: false
                  type:
                      displayName: Type of the right to find
                      type: string
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: rightArray
                  "400":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /requisitionGroups:
      displayName: Requisition Group
      post:
            is: [ secured ]
            description: Create new requisitionGroup.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "500":
                    body:
                        application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all requisitionGroups.
            responses:
                "200":
                    body:
                        application/json:
                "404":
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing requisitionGroup.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen requisitionGroup.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: "[AVOID USING] Completely removes requisition group. This action is not recoverable."
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
            post:
                is: [ secured, paginated ]
                description: Returns a paginated list of requisition groups given either a zone, a name, a program or a code.
                body:
                  application/json:
                    schema: requisitionGroupQuery
                responses:
                  200:
                      body:
                        application/json:
                            schema: requisitionGroupPage
                  400:
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  404:
                      body:
                        application/json:
                          schema: localizedErrorResponse


  /currencySettings:
      displayName: Currency settings
      get:
            is: [ secured ]
            description: Get all currency settings.
            responses:
                "200":
                    body:
                        application/json:
                          schema: currencySettingsDto

  /lots:
      displayName: Lot
      post:
            is: [ secured ]
            description: Create new lot. This endpoint is experimental.
            body:
                application/json:
                  schema: lotDto
            responses:
                "201":
                    body:
                        application/json:
                          schema: lotDto
                "500":
                    body:
                        application/json:
                "400":
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing lot. This endpoint is experimental.
                body:
                    application/json:
                      schema: lotDto
                responses:
                    "200":
                        body:
                          application/json:
                            schema: lotDto
                    "400":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen lot. This endpoint is experimental.
                responses:
                    "200":
                        body:
                          application/json:
                            schema: lotDto
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog
      /search:
          get:
              is: [ secured, paginated]
              description: Find lots with matched parameters. This endpoint is experimental.
              queryParameters:
                  tradeIdemId:
                          displayName: tradeIdem
                          type: string
                          required: false
                          repeat: false
                  expirationDate:
                          displayName: expirationDate
                          type: string
                          required: false
                          repeat: false
                  lotCode:
                          displayName: lotCode
                          type: string
                          required: false
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
