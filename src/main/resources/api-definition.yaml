#%RAML 0.8
---
title: OpenLMIS Reference Data API
version: "@version@"
baseUri: "@baseUrl@"

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS referencedata service documentation.

schemas:
  - booleanResult: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "BooleanResult",
          "description": "Boolean result",
          "properties": {
              "result": { "type": "boolean", "required": true, "title": "result" }
          }
      }

  - integerResult: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "IntegerResult",
          "description": "Integer result",
          "properties": {
              "result": { "type": "number", "required": true, "title": "result" }
          }
      }

  - errorResponse: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "ErrorResponse",
          "description": "Error response",
          "properties": {
              "message": { "type": "string", "required": true, "title": "message" },
              "description": { "type": "string", "required": false, "title": "description" }
          }
      }

  - localizedErrorResponse: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "LocalizedErrorResponse",
          "description": "Localized Error response",
          "properties": {
              "messageKey": { "type": "string", "title": "message key" },
              "message": { "type": "string", "title": "message" }
          },
          "required": ["messageKey"]
      }

  - approvedProductDto: !include schemas/approvedProductDto.json

  - approvedProductDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/approvedProductDto.json" }
      }

  - facility: !include schemas/facility.json

  - facilityArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref":"schemas/facility.json" }

      }

  - facilityOperator: !include schemas/facilityOperator.json

  - facilityType: !include schemas/facilityType.json

  - facilityTypeApprovedProduct: !include schemas/facilityTypeApprovedProduct.json

  - facilityTypeApprovedProductArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/facilityTypeApprovedProduct.json" }
      }

  - geographicLevel: !include schemas/geographicLevel.json

  - geographicZone: !include schemas/geographicZone.json

  - geographicZonePage: !include schemas/geographicZonePage.json

  - commodityType: |
        {   "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "title": "Commodity Type",
            "description": "A single commodityType",
            "properties": {
                "id": { "type": "string", "required": false, "title": "id" },
                "productCode": { "type": "string", "required": true, "title": "productCode" },
                "name": { "type": "string", "required": true, "title": "name" },
                "description": { "type": "string", "required": true, "title": "description" },
                "packSize": { "type": "integer", "required": true, "title": "packSize" },
                "packRoundingThreshold": { "type": "integer", "required": true, "title": "packRoundingThreshold" },
                "roundToZero": { "type": "boolean", "required": true, "title": "roundToZero" }
            }
        }

  - orderable: !include schemas/orderable.json

  - orderableArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/orderable.json" }

      }

  - processingPeriod: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "Processing Period",
          "description": "A single processingPeriod",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "processingSchedule": { "type": "object", "$ref": "#/schemas/processingSchedule", "required": true, "title": "processingSchedule" },
              "name": { "type": "string", "required": true, "title": "name" },
              "description": { "type": "string", "required": false, "title": "description" },
              "startDate": { "type": "string", "required": true, "title": "startDate" },
              "endDate": { "type": "string", "required": true, "title": "endDate" },
              "durationInMonths": { "type": "integer", "required": false, "title": "durationInMonths" }
          }
      }

  - orderableDisplayCategory: !include schemas/orderableDisplayCategory.json

  - orderableDisplayCategoryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/orderableDisplayCategory.json" }
      }

  - program: !include schemas/program.json

  - programArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref":"schemas/program.json" }
      }

  - programOrderable: !include schemas/programOrderable.json

  - right: !include schemas/right.json

  - rightArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/right.json" }
      }

  - role: !include schemas/role.json

  - roleArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/role.json" }
      }

  - processingSchedule: !include schemas/processingSchedule.json

  - processingScheduleArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/processingSchedule.json" }
      }

  - tradeItem: |
        {   "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "title": "Trade Item",
            "description": "A single tradeItem",
            "properties": {
                "id": { "type": "string", "required": false, "title": "id" },
                "productCode": { "type": "string", "required": true, "title": "productCode" },
                "name": { "type": "string", "required": false, "title": "name" },
                "packSize": { "type": "integer", "required": false, "title": "packSize" },
                "packRoundingThreshold": { "type": "integer", "required": true, "title": "packRoundingThreshold" },
                "roundToZero": { "type": "boolean", "required": true, "title": "roundToZero" },
                "manufacturer": { "type": "string", "required": false, "title": "manufacturer" }
            }
        }

  - user: !include schemas/user.json

  - userArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/user.json" }
      }

  - userQueryDto: !include schemas/userQueryDto.json

  - detailedRoleAssignmentDto: !include schemas/detailedRoleAssignmentDto.json

  - detailedRoleAssignmentDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/detailedRoleAssignmentDto.json" }
      }

  - supervisoryNodeDto: !include schemas/supervisoryNodeDto.json

  - supervisoryNodeDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/supervisoryNodeDto.json" }
      }

  - supplyLine: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "SupplyLine",
          "description": "A single supplyLine",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "supervisoryNode": { "type": "object", "$ref": "#/schemas/supervisoryNodeDto", "required": true },
              "description": { "type": "string", "required": false, "title": "description" },
              "program": { "type": "object", "$ref": "#/schemas/program", "required": true },
              "supplyingFacility": { "type": "object", "$ref": "#/schemas/facility", "required": true }
          }
      }


  - requisitionGroup: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "RequisitionGroup",
          "description": "A single requisitionGroup",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "code": { "type": "string", "required": true, "unique": true, "title": "code" },
              "name": { "type": "string", "required": true, "title": "name" },
              "description": { "type": "string", "required": false, "title": "description" },
              "supervisoryNode": { "type": "object", "$ref": "#/schemas/supervisoryNodeDto", "required": true },
              "requisitionGroupProgramScheules": { "type": "array", "required": false, "title": "requisitionGroupProgramSchedules", "items": { "type": "object", "$ref": "#/schemas/requisitionGroupProgramSchedule" }, "uniqueItems": false },
              "memberFacilities": { "type": "array", "required": false, "title": "memberFacilities", "items": { "type": "object", "$ref": "#/schemas/facility" }, "uniqueItems": false }
          }
      }

  - requisitionGroupProgramSchedule: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "RequisitionGroupProgramSchedule",
          "description": "A single requisitionGroupProgramSchedule",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "program": { "type": "object", "$ref": "#/schemas/program", "required": true },
              "processingSchedule": { "type": "object", "$ref": "#/schemas/processingSchedule", "required": true },
              "directDelivery": { "type": "boolean", "required": true, "title": "directDelivery" },
              "dropOffFacility": { "type": "object", "$ref": "#/schemas/facility", "required": false }
          }
      }

  - stockAdjustmentReason: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "Stock Adjustment Reason",
          "description": "A single stockAdjustmentReason",
          "properties": {
              "name": { "type": "string", "required": true, "title": "name" },
              "description": { "type": "string", "required": true, "title": "description" },
              "additive": { "type": "boolean", "required": false, "title": "additive" },
              "displayOrder": { "type": "integer", "required": false, "title": "displayOrder" }
          }
      }

  - stockAdjustmentReasonArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref":"#/schemas/stockAdjustmentReason" }
      }

  - uuidArray: |
      {
          "type": "array",
          "items": { "type": "string", "required": true, "title": "id" }
      }

  - auditLogEntry: !include schemas/auditLogEntry.json

  - auditLogEntryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/auditLogEntry.json" }
      }

  - currencySettingDto: !include schemas/currencySettingDto.json

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: true
                  repeat: false

    - paginated:
          queryParameters:
              page:
                  description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined valued are interpreted as zero.
                  type: integer
                  required: false
                  repeat: false
              size:
                  description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
                  type: integer
                  required: false
                  repeat: false

resourceTypes:
    - auditLog:
        description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
        get:
          description: Returns all or part of the resource's audit log
          # Although */auditLog endpoints support "page" and "number" query parameters for pagination,
          # they don’t return the response body and set of pagination-related values used by collections
          # of core domain resources.
          is: [ secured, paginated ]
          queryParameters:
              author:
                  displayName: author
                  description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
                  type: string
                  required: false
                  repeat: false
              changedPropertyName:
                  displayName: changedPropertyName
                  description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
                  type: string
                  required: false
                  repeat: false
          responses:
              200:
                body:
                  application/json:
                    schema: auditLogEntryArray
                    example: |
                      [
                        {
                          "changeType": "ValueChange",
                          "globalId": {
                            "entity": "org.openlmis.SomeClass",
                            "cdoId": 1
                          },
                          "commitMetadata": {
                            "author": "SomeUserName",
                            "properties": [],
                            "commitDate": "2016-12-17T19:39:57.621",
                            "id": 3
                          },
                          "property": "PropertyName",
                          "left": "OldValue",
                          "right": "NewValue"
                        }
                      ]
              403:
                body:
                  application/json:
                    schema: localizedErrorResponse
              404:
                description: The specified <<resourcePathName|!singularize>> does not exist.
                body:
                  application/json:
                    schema: localizedErrorResponse

    - instanceAuditLog:
        description: This represents the audit log for a specified instance of the <<resourcePathName|!singularize>> resource.
        type: auditLog
        uriParameters:
            id:
                type: string
                required: true
                repeat: false

    - collection:
        get:
            is: [ secured ]
            responses:
                200:
                  description: Collection retrieved successfully
                  body:
                      application/json:
                          schema: <<schema>>
                404:
                  description: Collection is empty.
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                201:
                  description: Item created successfully
                  body:
                      application/json:
                          schema: <<schema>>
    - member:
        get:
            is: [ secured ]
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        delete:
            is: [ secured ]
            responses:
                200:

/api:
  /processingPeriods:
      displayName: Processing Period
      get:
          is: [ secured ]
          description: Get all periods.
          responses:
              "200":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "404":
      post:
          is: [ secured ]
          description: Creates given processingPeriod if possible.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen processingPeriod.
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen processingPeriod.
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing processingPeriod.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/duration:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Display total months of processingPeriod.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: integerResult
                  "400":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "500":
                      body:
                        application/json:
      /search:
          get:
              is: [ secured ]
              description: Find periods with matched parameters.
              queryParameters:
                  programId:
                          displayName: program
                          type: string
                          required: true
                          repeat: false
                  facilityId:
                          displayName: facility
                          type: string
                          required: true
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
      /searchByScheduleAndDate:
          get:
              is: [ secured ]
              description: Find periods with matched parameters.
              queryParameters:
                  processingScheduleId:
                          displayName: processingSchedule
                          type: string
                          required: true
                          repeat: false
                  startDate:
                          displayName: startDate
                          type: string
                          required: false
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:

  /orderableDisplayCategories:
      displayName: Product Categories
      post:
            is: [ secured ]
            description: Create new orderableDisplayCategory.
            body:
                application/json:
                    schema: orderableDisplayCategory
            responses:
                "201":
                    body:
                        application/json:
                            schema: orderableDisplayCategory
                "400":
                    body:
                        application/json:
      get:
            is: [ secured ]
            description: Get all orderableDisplayCategories.
            responses:
                "200":
                    body:
                        application/json:
                            schema: orderableDisplayCategoryArray
                "404":
                    body:
                       application/json:
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing orderableDisplayCategory.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                                schema: orderableDisplayCategory
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen orderableDisplayCategory.
                responses:
                    "200":
                        body:
                            application/json:
                                schema: orderableDisplayCategory
                    "404":
                        body:
                            application/json:
            delete:
                is: [ secured ]
                description: Delete chosen orderableDisplayCategory.
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
      /search:
          get:
              is: [ secured ]
              description: Find orderable categories with matched code.
              queryParameters:
                  code:
                      displayName: code
                      description: orderableDisplayCategory code.
                      type: string
                      required: false
                      repeat: false
              responses:
                 "200":
                     body:
                       application/json:
                          schema: orderableDisplayCategoryArray
                 "404":

  /orderables:
      displayName: Orderable Product
      get:
          is: [ secured ]
          description: Get all Orderable Products.
          responses:
              "200":
                  body:
                    application/json:
                        schema: orderableArray
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get chosen orderable orderable.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: orderable
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /tradeItems:
      displayName: Trade Item
      put:
          is: [ secured ]
          description: Create or update a Trade Item.
          responses:
              "200":
                  body:
                    application/json:
                        schema: tradeItem

  /CommodityTypes:
      displayName: Commodity Type
      put:
          is: [ secured ]
          description: Create or update a Commodity Type.
          responses:
              "200":
                  body:
                    application/json:
                        schema: commodityType
      /{id}/tradeItems:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get a list of Trade Item UUIDs that may fulfill for the given Commodity Type.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: uuidArray
                  "404":
          put:
              is: [ secured ]
              description: Update the list of Trade Item UUIDs that may fulfill for the given Commodity Type.
              body:
                  application/json:
                      schema: uuidArray
              responses:
                  "200":
                  "400":
                  "404":

  /processingSchedules:
      displayName: Processing Schedule
      get:
          is: [ secured ]
          description: Get all schedules.
          responses:
              "200":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
              "404":
      post:
          is: [ secured ]
          description: Creates new processingSchedule.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse

      /search:
          get:
              is: [ secured ]
              description: Retrieve Processing Schedule based on the provided parameters.
              queryParameters:
                  programId:
                          displayName: program
                          type: string
                          required: true
                          repeat: false
                  facilityId:
                          displayName: facility
                          type: string
                          required: true
                          repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                            schema: processingScheduleArray
                  "400":
                      body:
                        application/json:
                            schema: errorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse

      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen processingSchedule.
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen processingSchedule.
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing processingSchedule.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "400":

  /supplyLines:
      displayName: Supply Lines
      get:
          is: [ secured ]
          description: Get all supplyLines.
          responses:
              "200":
                  body:
                    application/json:
              "404":
      post:
          is: [ secured ]
          description: Creates new supplyLine.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen supplyLine.
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen supplyLine.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing supplyLine.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /search:
          get:
              is: [ secured ]
              description: Find Supply Lines with matched parameters.
              queryParameters:
                  program:
                      displayName: program
                      description: program ID
                      type: string
                      required: true
                      repeat: false
                  supervisoryNode:
                      displayName: supervisoryNode
                      description: supervisoryNode ID
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                  "500":

      /searchByUUID:
          get:
              is: [ secured ]
              description: Find Supply Lines with matched parameters.
              queryParameters:
                  programId:
                      displayName: programId
                      description: program ID
                      type: string
                      required: true
                      repeat: false
                  supervisoryNodeId:
                      displayName: supervisoryNodeId
                      description: supervisoryNode ID
                      type: string
                      required: false
                      repeat: false
                  supplyingFacilityId:
                      displayName: supplyingFacilityId
                      description: supplyingFacility ID
                      type: string
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                  "500":

  /users:
      displayName: User
      get:
          is: [ secured ]
          description: Get all users.
          responses:
              "200":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      put:
          is: [ secured ]
          description: Create or update user.
          body:
              application/json:
          responses:
              "200":
                  body:
                    application/json:
              "400":
                  body:
                    text/plain:
              "500":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{userId}:
          uriParameters:
              userId:
                  displayName: User ID
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen user.
              responses:
                  "204":
                  "400":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen user.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          /roleAssignments:
              get:
                  is: [ secured ]
                  description: Return full information about user's roles and rights.
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: detailedRoleAssignmentDtoArray
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /hasRight:
              get:
                  is: [ secured ]
                  description: Check if the user has a right with certain criteria.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                      programId:
                          displayName: Program ID
                          description: The program to check (for supervision rights).
                          type: string
                          required: false
                          repeat: false
                      facilityId:
                          displayName: Facility ID
                          description: The facility to check (for supervision rights). If program is specified, this is required.
                          type: string
                          required: false
                          repeat: false
                      warehouseId:
                          displayName: Warehouse ID
                          description: The warehouse to check (for fulfillment rights).
                          type: string
                          required: false
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: booleanResult
                      "400":
                          body:
                            application/json:
                              schema: errorResponse
                      "404":
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /programs:
              is: [ secured ]
              displayName: User supervised programs
              get:
                  is: [ secured ]
                  description: Get all programs the associated user supervises (through the home
                      facility or through supervisory nodes).
                  queryParameters:
                      forHomeFacility:
                          displayName: For Home Facility
                          description: Flag to get programs for home facility.
                          type: boolean
                          required: false
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                      "404":
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /supervisedFacilities:
              is: [ secured ]
              displayName: User supervised facilities
              get:
                  is: [ secured ]
                  description: Get all facilities the associated user supervises, by right and program.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                      programId:
                          displayName: Program ID
                          description: The program to check.
                          type: string
                          required: true
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                      "400":
                          body:
                            application/json:
                              schema: errorResponse
                      "404":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
          /fulfillmentFacilities:
              is: [ secured ]
              displayName: User fulfilled facilities
              get:
                  is: [ secured ]
                  description: Get all facilities the associated user can fulfill.
                  queryParameters:
                      rightId:
                          displayName: Right ID
                          description: The right to check.
                          type: string
                          required: true
                          repeat: false
                  responses:
                      "200":
                          body:
                            application/json:
                              schema: facilityArray
                      "400":
                          body:
                            application/json:
                              schema: localizedErrorResponse
                      "404":
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse
      /search:
              post:
                  is: [ secured ]
                  description: "Search users, matching all parameters specified. Searching is done in the request body, in JSON format. The JSON in the request body should be one or more key-value pairs."
                  body:
                      application/json:
                        schema: userQueryDto
                  responses:
                      "200":
                          body:
                            application/json:
                                schema: userArray
                      "403":
                          body:
                            application/json:
                              schema: localizedErrorResponse

  /facilities:
      displayName: Facility
      get:
          is: [ secured ]
          description: Get all facilities.
          responses:
              "200":
                  body:
                    application/json:
                      schema: facilityArray
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new facility.
          body:
              application/json:
                schema: facility
          responses:
              "201":
                  body:
                    application/json:
                      schema: facility
              "400":
                  body:
                    application/json:
                      schema: errorResponse
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen facility.
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen facility.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: facility
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing facility.
              body:
                  application/json:
                    schema: facility
              responses:
                  "200":
                      body:
                        application/json:
                          schema: facility
                  "400":
                      body:
                        application/json:
                          schema: errorResponse
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
      /{id}/auditLog:
          type: instanceAuditLog

      /{id}/approvedProducts:
          uriParameters:
              id:
                  displayName: Facility ID
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Returns a list of full or non-full supply approved products for this facility
              queryParameters:
                  programId:
                      displayName: Program ID
                      type: string
                      required: false
                      repeat: false
                  fullSupply:
                      displayName: Full-supply orderable
                      type: boolean
                      required: true
                      repeat: false
              responses:
                200:
                    body:
                      application/json:
                        schema: approvedProductDtoArray
                400:
                    body:
                      application/json:
                        schema: errorResponse
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /supplying:
          get:
              is: [ secured ]
              description: Returns a list of facilities.
              queryParameters:
                  programId:
                      displayName: programId
                      type: string
                      required: true
                      repeat: false
                  supervisoryNodeId:
                      displayName: supervisoryNodeId
                      type: string
                      required: true
                      repeat: false
              responses:
                200:
                    body:
                      application/json:
                400:
                    body:
                      application/json:
                        schema: errorResponse
                404:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                500:

      /search:
          get:
              is: [ secured ]
              description: Returns a list of facilities.
              queryParameters:
                  code:
                      displayName: code
                      type: string
                      required: false
                      repeat: false
                  name:
                      displayName: name
                      type: string
                      required: false
                      repeat: false
              responses:
                200:
                    body:
                      application/json:
                          schema: facilityArray
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                404:

  /facilityTypes:
      displayName: Facility Type
      get:
          is: [ secured ]
          description: Get all facilityTypes.
          responses:
              "200":
                  body:
                    application/json:
              "404":
              403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new facilityType.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
              403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen facilityType.
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen facilityType.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing facilityType.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  403:
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /programs:
      displayName: Program
      get:
          is: [ secured ]
          description: Get all programs.
          responses:
              "200":
                  body:
                    application/json:
              "404":
      post:
          is: [ secured ]
          description: Creates new program.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen program.
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen program.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing program.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
      /search:
          get:
              is: [ secured ]
              description: Get chosen program.
              queryParameters:
                  name:
                      displayName: name
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "404":

  /stockAdjustmentReasons:
      displayName: Stock Adjustment Reason
      get:
          is: [ secured ]
          description: Get all stockAdjustmentReasons.
          responses:
              "200":
                  body:
                    application/json:
                      schema: stockAdjustmentReasonArray
              "404":
      post:
          is: [ secured ]
          description: Creates new Stock Adjustment Reason.
          body:
              application/json:
                  schema: stockAdjustmentReason
          responses:
              "201":
                  body:
                    application/json:
                      schema: stockAdjustmentReason
              "400":
                  body:
                    application/json:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen Stock Adjustment Reason.
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen Stock Adjustment Reason.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReason
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing Stock Adjustment Reason.
              body:
                  application/json:
                      schema: stockAdjustmentReason
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReason
                  "400":
      /search:
          get:
              is: [ secured ]
              description: Search for Stock Adjustment Reasons.
              queryParameters:
                  program:
                      displayName: programId
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: stockAdjustmentReasonArray
                  "404":

  /facilityOperators:
      displayName: Facility Operators
      post:
            is: [ secured ]
            description: Add Facility Operator to database.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "500":
                    body:
                        application/json:
      get:
            is: [ secured ]
            description: Returns Facility Operators with given id from database.
            responses:
                "200":
                    body:
                        application/json:
                403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                "404":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Updates Facility Operators with given id from database.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Updates Facility Operators with given id from database.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Updates Facility Operators with given id from database.
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
                    403:
                        body:
                          application/json:
                            schema: localizedErrorResponse

  /geographicZones:
      displayName: Geographic Zone
      get:
          is: [ secured, paginated ]
          description: Get all geographicZones.
          responses:
              "200":
                  body:
                    application/json:
                      schema: geographicZonePage
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      post:
          is: [ secured ]
          description: Creates new geographicZone.
          body:
              application/json:
                schema: geographicZone
          responses:
              "201":
                  body:
                    application/json:
                      schema: geographicZone
              "403":
                  body:
                    application/json:
                      schema: localizedErrorResponse
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen geographicZone.
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          get:
              is: [ secured ]
              description: Get chosen geographicZone.
              responses:
                  "200":
                      body:
                        application/json:
                          schema: geographicZone
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing geographicZone.
              body:
                  application/json:
                    schema: geographicZone
              responses:
                  "200":
                      body:
                        application/json:
                          schema: geographicZone
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /geographicLevels:
      displayName: Geographic Level
      get:
          is: [ secured ]
          description: Get all geographicLevels.
          responses:
              "200":
                  body:
                    application/json:
              "404":
      post:
          is: [ secured ]
          description: Creates new geographicLevel.
          body:
              application/json:
          responses:
              "201":
                  body:
                    application/json:
              "400":
                  body:
                    application/json:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen geographicLevel.
              responses:
                  "204":
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "409":
          get:
              is: [ secured ]
              description: Get chosen geographicLevel.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse
          put:
              is: [ secured ]
              description: Update existing geographicLevel.
              body:
                  application/json:
              responses:
                  "200":
                      body:
                        application/json:
                  "400":

  /facilityTypeApprovedProducts:
      displayName: Facility Type Approved Product
      post:
            is: [ secured ]
            description: Create new facilityTypeApprovedProduct.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "500":
                    body:
                        application/json:
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing facilityTypeApprovedProduct.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen facilityTypeApprovedProduct.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Delete chosen facilityTypeApprovedProduct.
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:

  /supervisoryNodes:
      displayName: Supervisory Node
      post:
            is: [ secured ]
            description: Create new supervisoryNode.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "500":
                    body:
                        application/json:
      get:
            is: [ secured ]
            description: Get all supervisoryNodes.
            responses:
                "200":
                    body:
                        application/json:
                "404":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing supervisoryNode.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen supervisoryNode.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Delete chosen supervisoryNode.
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":
                        body:
                            application/json:
      /search:
            get:
                is: [ secured ]
                description: Retrieve Supervisory Node based on the provided parameters.
                queryParameters:
                    programId:
                            displayName: program
                            type: string
                            required: true
                            repeat: false
                    facilityId:
                            displayName: facility
                            type: string
                            required: true
                            repeat: false
                responses:
                    "200":
                        body:
                          application/json:
                              schema: supervisoryNodeDtoArray
                    "400":
                        body:
                          application/json:
                            schema: errorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
  /roles:
      displayName: Role
      post:
            is: [ secured ]
            description: Create new role.
            body:
                application/json:
                  schema: role
            responses:
                "201":
                    body:
                        application/json:
                          schema: role
                "400":
                    body:
                        application/json:
                "403":
                    body:
                        application/json:
                          schema: localizedErrorResponse
                "409":
                    body:
                        application/json:
                          schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all roles.
            responses:
                "200":
                    body:
                        application/json:
                          schema: roleArray
                "403":
                    body:
                        application/json:
                          schema: localizedErrorResponse
      /{roleId}:
            uriParameters:
              roleId:
                  displayName: Role ID
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing role (or create new one using role ID).
                body:
                    application/json:
                      schema: role
                responses:
                    "200":
                        body:
                            application/json:
                              schema: role
                    "400":
                        body:
                            application/json:
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen role.
                responses:
                    "200":
                        body:
                            application/json:
                              schema: role
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Delete chosen role.
                responses:
                    "204":
                    "400":
                        body:
                            application/json:
                    "403":
                        body:
                            application/json:
                              schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse

  /rights:
      displayName: Right
      put:
            is: [ secured ]
            description: Save a right.
            body:
                application/json:
                    schema: right
            responses:
                "200":
                    body:
                        application/json:
                            schema: right
                "400":
                    body:
                        application/json:
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      get:
            is: [ secured ]
            description: Get all rights.
            responses:
                "200":
                    body:
                        application/json:
                            schema: rightArray
                "403":
                    body:
                      application/json:
                        schema: localizedErrorResponse
      /{rightId}:
            uriParameters:
              rightId:
                  displayName: Right ID
                  type: string
                  required: true
                  repeat: false
            get:
                is: [ secured ]
                description: Get chosen right.
                responses:
                    "200":
                        body:
                            application/json:
                                schema: right
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Delete chosen right.
                responses:
                    "204":
                    "403":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
      /search:
          get:
              is: [ secured ]
              description: Search for rights.
              queryParameters:
                  name:
                      displayName: Name of the right to find
                      type: string
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: rightArray
                  "403":
                      body:
                        application/json:
                          schema: localizedErrorResponse
                  "404":
                      body:
                        application/json:
                          schema: localizedErrorResponse

  /requisitionGroups:
      displayName: Requisition Group
      post:
            is: [ secured ]
            description: Create new requisitionGroup.
            body:
                application/json:
            responses:
                "201":
                    body:
                        application/json:
                "500":
                    body:
                        application/json:
      get:
            is: [ secured ]
            description: Get all requisitionGroups.
            responses:
                "200":
                    body:
                        application/json:
                "404":
      /{id}:
            uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
            put:
                is: [ secured ]
                description: Update existing requisitionGroup.
                body:
                    application/json:
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            get:
                is: [ secured ]
                description: Get chosen requisitionGroup.
                responses:
                    "200":
                        body:
                            application/json:
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
            delete:
                is: [ secured ]
                description: Delete chosen requisitionGroup.
                responses:
                    "204":
                    "404":
                        body:
                          application/json:
                            schema: localizedErrorResponse
                    "409":

  /currencySettings:
      displayName: Currency settings
      get:
            is: [ secured ]
            description: Get all currency settings.
            responses:
                "200":
                    body:
                        application/json:
                          schema: currencySettingDto
