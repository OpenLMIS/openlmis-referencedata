execution:
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-all
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-search-one-page
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-has-right
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-permission-strings
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-programs
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-facilities
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: create-user
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: delete-user
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-supported-programs
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-fulfillment-facilities
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-get-one-role-assignments
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,10m)}
    scenario: users-search-by-right

scenarios:
  users-get-one:
    variables:
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}
        method: GET
        label: GetUser
        headers:
          Authorization: Bearer ${access_token}
  users-get-all:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users
        method: GET
        label: GetAllUsers
        headers:
          Authorization: Bearer ${access_token}
  users-search-one-page:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/search?page=1&size=10
        method: POST
        label: GetAUserPageOfTen
        body: '{}'
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
  create-user:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users
        method: PUT
        label: CreateUser
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonOutput;

            def random = new Random();

            def user = [
              username: random.nextInt().abs().toString(),
              firstName: "first-name",
              lastName: "last-name"
            ];

            vars.put("user", JsonOutput.toJson(user));
        body: ${user}
        extract-jsonpath:
          user_id: $.id
  delete-user:
    requests:
      - include-scenario: create-user
      - url: ${__P(base-uri)}/api/users/${user_id}
        method: DELETE
        label: DeleteUser
        headers:
          Authorization: Bearer ${access_token}
  users-has-right:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/rights
        method: GET
        label: GetAllRights
        headers:
          Authorization: Bearer ${access_token}
        extract-jsonpath:
          rightUuid:
            jsonpath: $.[:1].id
        jsr223:
          script-text: |
            String uuid = vars.get("rightUuid");
            uuid = uuid.replaceAll(/"|\[|\]/, "");
            vars.put("rightUuid", uuid);
      - url: ${__P(base-uri)}/api/users/${user_id}/hasRight?rightId=${rightUuid}
        method: GET
        label: UserHasRight
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-permission-strings:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/permissionStrings
        method: GET
        label: GetUserPermissionStrings
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-programs:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/programs
        method: GET
        label: GetUserPrograms
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-supported-programs:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/supportedPrograms
        method: GET
        label: GetUserSupportedPrograms
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-facilities:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/facilities
        method: GET
        label: GetUserFacilities
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-fulfillment-facilities:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
      # ORDERS_VIEW
      right_id: 7b2da074-b754-4e49-bad3-2520651e5107
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/fulfillmentFacilities?rightId=${right_id}
        method: GET
        label: GetUserFulfillmentFacilities
        headers:
          Authorization: Bearer ${access_token}
  users-get-one-role-assignments:
    variables:
      # administrator
      user_id: a337ec45-31a0-4f2b-9b2e-a105c4b669bb
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/${user_id}/roleAssignments
        method: GET
        label: GetUserRoleAssignments
        headers:
          Authorization: Bearer ${access_token}
  users-search-by-right:
    variables:
      # USERS_MANAGE
      right_id: 3687ea98-8a1e-4347-984c-3fd97d072066
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/users/rightSearch?rightId=${right_id}
        method: GET
        label: GetUsersByRight
        headers:
          Authorization: Bearer ${access_token}

reporting:
  - module: passfail
    criteria:
      - 'GetUser too high error rate: failures>1%, continue as failed, label=GetUser, title="GetUser error rate too high"'
      - 'GetUser is too slow: p90>2500ms, stop as failed, label=GetUser, title="GetUser response time too high"'
      - 'GetUser needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetUser, title="GetUser needs improvement"'
      - 'GetAllUsers too high error rate: failures>1%, continue as failed, label=GetAllUsers, title="GetAllUsers error rate too high"'
      - 'GetAllUsers is too slow: p90>2500ms, stop as failed, label=GetAllUsers, title="GetAllUsers response time too high"'
      - 'GetAllUsers needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetAllUsers, title="GetAllUsers needs improvement"'
      - 'GetAUserPageOfTen too high error rate: failures>1%, continue as failed, label=GetAUserPageOfTen, title="GetAUserPageOfTen error rate too high"'
      - 'GetAUserPageOfTen is too slow: p90>2500ms, stop as failed, label=GetAUserPageOfTen, title="GetAUserPageOfTen response time too high"'
      - 'GetAUserPageOfTen needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetAUserPageOfTen, title="GetAUserPageOfTen needs improvement"'
      - 'CreateUser too high error rate: failures>1%, continue as failed, label=CreateUser, title="CreateUser error rate too high"'
      - 'CreateUser is too slow: p90>2000ms, stop as failed, label=CreateUser, title="CreateUser response time too high"'
      - 'CreateUser needs improvement: p90>1500ms and p90<=2000ms, continue as passed, label=CreateUser, title="CreateUser needs improvement"'
      - 'DeleteUser too high error rate: failures>1%, continue as failed, label=DeleteUser, title="DeleteUser error rate too high"'
      - 'DeleteUser is too slow: p90>2500ms, stop as failed, label=DeleteUser, title="DeleteUser response time too high"'
      - 'DeleteUser needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=DeleteUser, title="DeleteUser needs improvement"'
      - 'GetUserPrograms too high error rate: failures>1%, continue as failed, label=GetUserPrograms, title="GetUserPrograms error rate too high"'
      - 'GetUserPrograms is too slow: p90>1500ms, stop as failed, label=GetUserPrograms, title="GetUserPrograms response time too high"'
      - 'GetUserPrograms needs improvement: p90>1000ms and p90<=1500ms, continue as passed, label=GetUserPrograms, title="GetUserPrograms needs improvement"'
      - 'GetUserFacilities too high error rate: failures>1%, continue as failed, label=GetUserFacilities, title="GetUserFacilities error rate too high"'
      - 'GetUserFacilities is too slow: p90>2500ms, stop as failed, label=GetUserFacilities, title="GetUserFacilities response time too high"'
      - 'GetUserFacilities needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetUserFacilities, title="GetUserFacilities needs improvement"'
      - 'GetUserRoleAssignments too high error rate: failures>1%, continue as failed, label=GetUserRoleAssignments, title="GetUserRoleAssignments error rate too high"'
      - 'GetUserRoleAssignments is too slow: p90>2500ms, stop as failed, label=GetUserRoleAssignments, title="GetUserRoleAssignments response time too high"'
      - 'GetUserRoleAssignments needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetUserRoleAssignments, title="GetUserRoleAssignments needs improvement"'
