execution:
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 1m
    hold-for: ${__P(scenario-duration,600)}
    scenario: approved-products

scenarios:
  full-supply-approved-products:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/13037147-1769-4735-90a7-b9b310d128b8/approvedProducts?fullSupply=true&programId=10845cb9-d365-4aaa-badd-b4fa39c6a26a
        method: GET
        label: Get1000ApprovedFullSupplyProductsForDistrictHospital
        headers:
          Authorization: Bearer ${access_token}
  non-full-supply-approved-products:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/13037147-1769-4735-90a7-b9b310d128b8/approvedProducts?fullSupply=false&programId=10845cb9-d365-4aaa-badd-b4fa39c6a26a
        method: GET
        label: Get9000ApprovedNonFullSupplyProductsForDistrictHospital
        headers:
          Authorization: Bearer ${access_token}

reporting:
  - module: passfail
    criteria:
      - 'p90>3000ms, continue as failed, label=Get1000ApprovedFullSupplyProductsForHealthClinic, title="Get1000ApprovedFullSupplyProductsForHealthClinic response time too high"'
      - 'p90>1500ms and p90<=3000ms, continue as passed, label=Get1000ApprovedFullSupplyProductsForHealthClinic, title="Get1000ApprovedFullSupplyProductsForHealthClinic needs improvement"'
      - 'failures>1%, continue as failed, label=Get1000ApprovedFullSupplyProductsForHealthClinic, title="Get1000ApprovedFullSupplyProductsForHealthClinic error rate too high"'
