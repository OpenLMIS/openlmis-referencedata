execution:
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: ${__P(scenario-iterations,10)}
    ramp-up: ${__P(scenario-ramp-up,1m)}
    hold-for: ${__P(scenario-duration,10m)}
    scenario: service-account-create
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: ${__P(scenario-iterations,10)}
    ramp-up: ${__P(scenario-ramp-up,1m)}
    hold-for: ${__P(scenario-duration,10m)}
    scenario: service-account-get
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: ${__P(scenario-iterations,10)}
    ramp-up: ${__P(scenario-ramp-up,1m)}
    hold-for: ${__P(scenario-duration,10m)}
    scenario: service-account-update
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: ${__P(scenario-iterations,10)}
    ramp-up: ${__P(scenario-ramp-up,1m)}
    hold-for: ${__P(scenario-duration,10m)}
    scenario: service-account-delete

scenarios:
  service-account-create:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/serviceAccounts
        method: POST
        label: CreateServiceAccount
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonOutput

            def body = [
              token: UUID.randomUUID().toString()
            ]

            vars.put("service_account_creation_body", JsonOutput.toJson(body))
        body: ${service_account_creation_body}
        extract-jsonpath:
          service_account_id: $.token
  service-account-get:
    requests:
      - include-scenario: service-account-create
      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
        method: GET
        label: GetServiceAccount
        headers:
          Authorization: Bearer ${access_token}
  service-account-update:
    requests:
      - include-scenario: service-account-get
      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
        method: PUT
        label: UpdateServiceAccount
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper
            import groovy.json.JsonOutput

            def response = prev.getResponseDataAsString()
            def jsonSlurper = new JsonSlurper()

            def account = jsonSlurper.parseText(response)
            // OLMIS-3861: add code to update role assignments (token and creation data cannot be updated)

            vars.put("service_account", JsonOutput.toJson(account))
        body: ${service_account}
  service-account-delete:
    requests:
      - include-scenario: service-account-get
      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
        method: DELETE
        label: DeleteServiceAccount
        headers:
          Authorization: Bearer ${access_token}

reporting:
  - module: passfail
    criteria:
      - 'CreateServiceAccount too high error rate: failures>1%, continue as failed, label=CreateServiceAccount, title="CreateServiceAccount error rate too high"'
      - 'CreateServiceAccount is too slow: p90>3000ms, stop as failed, label=CreateServiceAccount, title="CreateServiceAccount response time too high"'
      - 'CreateServiceAccount needs improvement: p90>2000ms and p90<=3000ms, continue as passed, label=CreateServiceAccount, title="CreateServiceAccount needs improvement"'
      - 'GetServiceAccount too high error rate: failures>1%, continue as failed, label=GetServiceAccount, title="GetServiceAccount error rate too high"'
      - 'GetServiceAccount is too slow: p90>2500ms, stop as failed, label=GetServiceAccount, title="GetServiceAccount response time too high"'
      - 'GetServiceAccount needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetServiceAccount, title="GetServiceAccount needs improvement"'
      - 'UpdateServiceAccount too high error rate: failures>1%, continue as failed, label=UpdateServiceAccount, title="UpdateServiceAccount error rate too high"'
      - 'UpdateServiceAccount is too slow: p90>4000ms, stop as failed, label=UpdateServiceAccount, title="UpdateServiceAccount response time too high"'
      - 'UpdateServiceAccount needs improvement: p90>2500ms and p90<=4000ms, continue as passed, label=UpdateServiceAccount, title="UpdateServiceAccount needs improvement"'
      - 'DeleteServiceAccount too high error rate: failures>1%, continue as failed, label=DeleteServiceAccount, title="DeleteServiceAccount error rate too high"'
      - 'DeleteServiceAccount is too slow: p90>2500ms, stop as failed, label=DeleteServiceAccount, title="DeleteServiceAccount response time too high"'
      - 'DeleteServiceAccount needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=DeleteServiceAccount, title="DeleteServiceAccount needs improvement"'
