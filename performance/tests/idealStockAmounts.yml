execution:
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 60
    hold-for: ${__P(scenario-duration,600)}
    scenario: download-ideal-stock-amounts-csv
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 60
    hold-for: ${__P(scenario-duration,600)}
    scenario: get-ideal-stock-amounts
  - concurrency: ${__P(scenario-concurrency,10)}
    iterations: 10
    ramp-up: 60
    hold-for: ${__P(scenario-duration,600)}
    scenario: upload-ideal-stock-amounts-csv

scenarios:
  download-ideal-stock-amounts-csv:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/idealStockAmounts?format=csv
        method: GET
        label: GetAnIdealStockAmountCSV
        headers:
          Authorization: Bearer ${access_token}

  get-ideal-stock-amounts:
    variables:
      # Cuamba, Cuamba
      facility_id: 7fc9bda8-ad8a-468d-8244-38e1918527d5
      # BCG
      commodity_type_id: 99ccf663-3304-44ae-b2e0-a67fd5511e2a
      # Monthly, Jan2017
      processing_period_id: 516ac930-0d28-49f5-a178-64764e22b236
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/idealStockAmounts?facilityId=${facility_id}&commodityTypeId=${commodity_type_id}&processingPeriodId=${processing_period_id}
        method: GET
        label: GetIdealStockAmounts
        headers:
          Authorization: Bearer ${access_token}

  upload-ideal-stock-amounts-csv:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/idealStockAmounts?format=csv
        method: POST
        label: UploadIdealStockAmounts
        headers:
          Authorization: Bearer ${access_token}
        upload-files:
          - param: file
            path: /tmp/resources/isa.csv

reporting:
  - module: passfail
    criteria:
      - 'GetAnIdealStockAmountCSV too high error rate: failures>1%, continue as failed, label=GetAnIdealStockAmountCSV, title="GetAnIdealStockAmountCSV error rate too high"'
      - 'GetAnIdealStockAmountCSV is too slow: p90>2500ms, stop as failed, label=GetAnIdealStockAmountCSV, title="GetAnIdealStockAmountCSV response time too high"'
      - 'GetAnIdealStockAmountCSV needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetAnIdealStockAmountCSV, title="GetAnIdealStockAmountCSV needs improvement"'
      - 'GetIdealStockAmounts too high error rate: failures>1%, continue as failed, label=GetIdealStockAmounts, title="GetIdealStockAmounts error rate too high"'
      - 'GetIdealStockAmounts is too slow: p90>2500ms, stop as failed, label=GetIdealStockAmounts, title="GetIdealStockAmounts response time too high"'
      - 'GetIdealStockAmounts needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetIdealStockAmounts, title="GetIdealStockAmounts needs improvement"'
      - 'UploadIdealStockAmounts too high error rate: failures>1%, continue as failed, label=UploadIdealStockAmounts, title="UploadIdealStockAmounts error rate too high"'
      - 'UploadIdealStockAmounts is too slow: p90>4000ms, stop as failed, label=UploadIdealStockAmounts, title="UploadIdealStockAmounts response time too high"'
      - 'UploadIdealStockAmounts needs improvement: p90>3000ms and p90<=4000ms, continue as passed, label=UploadIdealStockAmounts, title="UploadIdealStockAmounts needs improvement"'
